{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Alert/Alert.module.css","transitions/slide.module.css","components/App/App.module.css","transitions/titleSlideAnimation.module.css","transitions/pop.module.css","transitions/alertAnimation.module.css","components/ContactForm/ContactForm.js","components/Alert/Alert.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/App/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","saveContact","resetForm","this","className","styles","form","onSubmit","inputField","onChange","submitBtn","type","Component","Alert","message","alert","Filter","filter","handleFilterChange","wrapper","filterInput","ContactItem","contact","handleRemove","removeBtn","onClick","ContactList","contacts","TransitionGroup","component","contactList","map","CSSTransition","key","id","timeout","classNames","slideAnimation","contactItem","App","titleAnimation","isShow","isExistContact","find","toLowerCase","setTimeout","checkLength","string","length","shortid","generate","concat","savedContacts","localStorage","getItem","JSON","parse","prevState","setItem","stringify","includes","visibleContacts","applyFilter","container","in","titleSlideAnimation","popAnimation","unmountOnExit","alertAnimation","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1fdf48ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"ContactForm_inputField__2qKkL\",\"form\":\"ContactForm_form__1fuOn\",\"submitBtn\":\"ContactForm_submitBtn__J-Qu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactItem_name__1bT_p\",\"removeBtn\":\"ContactItem_removeBtn__1TufG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__u16Kg\",\"wrapper\":\"Filter_wrapper__IqOjQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\",\"contactItem\":\"ContactList_contactItem__EQAbQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__1rkHi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__BLs75\",\"enterActive\":\"slide_enterActive__2XArv\",\"exit\":\"slide_exit__2XvOt\",\"exitActive\":\"slide_exitActive__3LNYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16xz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"titleSlideAnimation_enter__2Tg-T\",\"enterActive\":\"titleSlideAnimation_enterActive__3LYBI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__1NM7x\",\"enterActive\":\"pop_enterActive__1Bhql\",\"exit\":\"pop_exit__1_phz\",\"exitActive\":\"pop_exitActive__3xbz2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alertAnimation_enter___5Y_0\",\"enterActive\":\"alertAnimation_enterActive__1QYHa\",\"exit\":\"alertAnimation_exit__2MWaK\",\"exitActive\":\"alertAnimation_exitActive__1j4yO\"};","/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    saveContact: propTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.saveContact({ ...this.state });\n    this.resetForm();\n  };\n\n  resetForm() {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  }\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input className={styles.inputField} name=\"name\" value={this.state.name} onChange={this.handleChange} />\n        </label>\n\n        <label>\n          Number\n          <input className={styles.inputField} name=\"number\" value={this.state.number} onChange={this.handleChange} />\n        </label>\n\n        <button className={styles.submitBtn} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Alert.module.css';\n\nconst Alert = ({ message }) => <p className={styles.alert}>{message}!</p>;\n\nAlert.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Alert;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ filter, handleFilterChange }) => (\n  <div className={styles.wrapper}>\n    <label>\n      Contact Filter:\n      <input className={styles.filterInput} value={filter} onChange={handleFilterChange} />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  filter: propTypes.string.isRequired,\n  handleFilterChange: propTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './ContactItem.module.css';\n\nconst ContactItem = ({ contact, handleRemove }) => (\n  <>\n    <span className={styles.name}>{contact.name}: </span>\n    <span className={styles.number}>{contact.number}</span>\n    <button className={styles.removeBtn} type=\"button\" onClick={handleRemove}>\n      Delete\n    </button>\n  </>\n);\n\nContactItem.propTypes = {\n  contact: propTypes.exact({\n    name: propTypes.string.isRequired,\n    number: propTypes.string.isRequired,\n  }).isRequired,\n  handleRemove: propTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport ContactItem from '../ContactItem/ContactItem';\nimport styles from './ContactList.module.css';\nimport slideAnimation from '../../transitions/slide.module.css';\n\nconst ContactList = ({ contacts, handleRemove }) => (\n  <TransitionGroup component=\"ul\" className={styles.contactList}>\n    {contacts.map(contact => (\n      <CSSTransition key={contact.id} timeout={250} classNames={slideAnimation}>\n        <li className={styles.contactItem}>\n          <ContactItem contact={contact} handleRemove={() => handleRemove(contact.id)} />\n        </li>\n      </CSSTransition>\n    ))}\n  </TransitionGroup>\n);\n\nContactList.propTypes = {\n  contacts: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n    }),\n  ).isRequired,\n  handleRemove: propTypes.func.isRequired,\n};\n\nexport default ContactList;\n","/* eslint-disable no-alert */\n/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport shortid from 'shortid';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Alert from '../Alert/Alert';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport styles from './App.module.css';\n\nimport titleSlideAnimation from '../../transitions/titleSlideAnimation.module.css';\nimport popAnimation from '../../transitions/pop.module.css';\nimport alertAnimation from '../../transitions/alertAnimation.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    titleAnimation: false,\n    alert: {\n      isShow: false,\n      message: '',\n    },\n  };\n\n  componentDidMount() {\n    const savedContacts = localStorage.getItem('contacts');\n    if (savedContacts) {\n      this.setState({\n        contacts: JSON.parse(savedContacts),\n      });\n    }\n    this.setState({ titleAnimation: true });\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  isExistContact = name => {\n    const { contacts } = this.state;\n    return contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n  };\n\n  saveContact = ({ name, number }) => {\n    if (this.isExistContact(name)) {\n      this.setState({\n        alert: {\n          isShow: true,\n          message: `Contact with ${name} already exist!`,\n        },\n      });\n\n      setTimeout(() => {\n        this.setState({\n          alert: {\n            isShow: false,\n            message: `Contact with ${name} already exist!`,\n          },\n        });\n      }, 2000);\n\n      return;\n    }\n\n    const checkLength = string => string.length < 1;\n\n    if (checkLength(`${name}`) || checkLength(`${number}`)) {\n      alert('Please, fill in all required entry fields');\n      return;\n    }\n\n    const contact = {\n      name,\n      number,\n      id: shortid.generate(),\n    };\n\n    this.setState(state => ({\n      contacts: state.contacts.concat(contact),\n    }));\n  };\n\n  handleFilterChange = e => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  handleRemove = id => {\n    this.setState(state => {\n      const contacts = state.contacts.filter(contact => contact.id !== id);\n      const filter = contacts.length > 1 ? state.filter : '';\n      return { contacts, filter };\n    });\n  };\n\n  applyFilter() {\n    return this.state.contacts.filter(contact => contact.name.toLowerCase().includes(this.state.filter.toLowerCase()));\n  }\n\n  render() {\n    const visibleContacts = this.applyFilter();\n    const { contacts, titleAnimation, alert } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <CSSTransition in={titleAnimation} timeout={500} classNames={titleSlideAnimation}>\n          <h1>Phonebook</h1>\n        </CSSTransition>\n\n        <ContactForm saveContact={this.saveContact} />\n\n        <h2>Contacts</h2>\n        <CSSTransition in={contacts.length > 1} timeout={250} classNames={popAnimation} unmountOnExit>\n          <Filter filter={this.state.filter} handleFilterChange={this.handleFilterChange} />\n        </CSSTransition>\n\n        {visibleContacts.length > 0 && <ContactList contacts={visibleContacts} handleRemove={this.handleRemove} />}\n        <CSSTransition in={alert.isShow} timeout={250} classNames={alertAnimation} unmountOnExit>\n          <Alert message={alert.message} />\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './base.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}